{"version":3,"sources":["components/feedback/FeedBack.styled.jsx","components/feedback/FeedBack.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/section/section.styled.jsx","components/section/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["ButtonFeedback","styled","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","onClick","Stats","p","Statistics","good","neutral","bad","total","countPositiveFeedbackPercentage","Title","h1","Container","section","Section","title","children","Message","Notification","message","App","useState","setGood","setNeutral","setBad","feedbackOptions","value","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEMA,EAAiBC,IAAOC,OAAV,4F,OCiBLC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAC/B,OACE,eAACT,EAAD,CAA6BU,QAAS,kBAAML,EAAgBI,IAA5D,UACG,IACAA,IAFkBA,OCJdE,EAAQV,IAAOW,EAAV,gEC2BHC,EA1BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,gCAEA,OACE,qCACE,eAACP,EAAD,oBAAcG,KACd,eAACH,EAAD,uBAAiBI,KACjB,eAACJ,EAAD,mBAAaK,KACb,eAACL,EAAD,qBAAeM,KACf,eAACN,EAAD,iCAA2BO,EAA3B,WCdAC,EAAQlB,IAAOmB,GAAV,qEAKLC,EAAYpB,IAAOqB,QAAV,mDCIAC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACJ,EAAD,WACE,cAACF,EAAD,UAAQK,IACPC,MCJMC,EAAUzB,IAAOW,EAAV,wFCCpB,SAASe,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACF,EAAD,UAAUE,I,MC0EJC,MAtEf,WAOE,MAAwBC,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAkCQC,EAAkB,CAAEpB,OAAMC,UAASC,OACzC,OACE,qCACE,cAAC,EAAD,CAASQ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEpB,QAAS8B,EACT7B,gBApCU,SAACI,GACrB,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAI,GAAK,OAAIA,EAAM,KACvB,MAEF,IAAK,UACDH,GAAW,SAAAG,GAAK,OAAIA,EAAM,KAC1B,MAEJ,IAAK,MACCF,GAAO,SAAAE,GAAK,OAAIA,EAAM,KACtB,MACN,QACI,aAyBCrB,GAAQC,GAAWC,EAClB,cAAC,EAAD,CAASQ,MAAM,aAAf,SACE,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAzBHH,EAAOC,EAAUC,EA0BdE,gCApBHkB,KAAKC,MAAc,IAAPvB,GAAeA,EAAOC,EAAUC,QAwB7C,cAACW,EAAD,CAAcC,QAAQ,0BClEhCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.758365e6.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst ButtonFeedback = styled.button`\n  font-size: 20px;\n  font-weight: 600;\n  margin-right: 10px;\n`;\n\nexport { ButtonFeedback };\n","import PropTypes from \"prop-types\";\nimport { ButtonFeedback } from \"./FeedBack.styled.jsx\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return Object.keys(options).map((option) => {\n    return (\n      <ButtonFeedback key={option} onClick={() => onLeaveFeedback(option)}>\n        {\" \"}\n        {option}\n      </ButtonFeedback>\n    );\n  });\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import styled from \"@emotion/styled\";\n\nexport const Stats = styled.p`\n  font-size: 20px;\n  color: grey;\n`;\n","import PropTypes from \"prop-types\";\nimport { Stats } from \"./Statistics.styled.jsx\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      <Stats>Good: {good}</Stats>\n      <Stats>Neutral: {neutral}</Stats>\n      <Stats>Bad: {bad}</Stats>\n      <Stats>Total: {total}</Stats>\n      <Stats>Positive Feedback: {countPositiveFeedbackPercentage}%</Stats>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  countPositiveFeedbackPercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import styled from \"@emotion/styled\";\n\nconst Title = styled.h1`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst Container = styled.section`\n  padding: 10px 40px;\n`;\n\nexport { Title, Container };\n","import { Title, Container } from \"./section.styled.jsx\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Message = styled.p`\n  font-size: 30px;\n  color: tomato;\n  margin-left: 20px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Message } from \"./Notification.styled.jsx\";\n\nfunction Notification({ message }) {\n  return <Message>{message}</Message>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport { Notification };\n","// import React, { Component } from \"react\";\nimport {useState} from 'react';\nimport FeedbackOptions from \"./feedback/FeedBack.jsx\";\nimport Statistics from \"./Statistics/Statistics.jsx\";\nimport Section from \"./section/Section.jsx\";\nimport { Notification } from \"./Notification/Notification.jsx\";\nimport \"./App.css\";\n\nfunction App () {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  \n\n  const onIncrement = (option) => {\n  switch (option) {\n    case 'good':\n      setGood(value => value+1);\n      break;\n\n    case 'neutral':\n        setNeutral(value => value+1);\n        break;\n\n    case 'bad':\n          setBad(value => value+1);\n          break;  \n    default:\n        return;\n  }\n  };\n\n  const countTotalFeedback = () => {\n    \n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    \n\n    return Math.round((good * 100) / (good + neutral + bad));\n  };\n\n  \n    const feedbackOptions = { good, neutral, bad };\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbackOptions}\n            onLeaveFeedback={onIncrement}\n          />\n        </Section>\n        {good || neutral || bad ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              countPositiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}